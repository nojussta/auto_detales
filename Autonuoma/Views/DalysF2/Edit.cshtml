@model Org.Ktu.Isk.P175B602.Autonuoma.Models.DalysF2.DalysCE

@* this will also be used as page title in main layout *@
@{
    ViewData["title"] = "Dalies redagavimas (F2)";
}

@* content header *@
<div class="main-content-header">
    <span class="title">@ViewData["title"]</span>
    <span class="actions">
        <a href="@Url.Action("Index")"
           class="btn btn-outline-primary btn-sm">
            <i class="fa-solid fa-angles-left"></i> Atgal į sarašą
        </a>
    </span>
</div>

@* content itself *@
<div class="main-content-ced">
    @using (Html.BeginForm(FormMethod.Post, new { @class = "entity-ce" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @* add hidden form fields for non-visible properties, otherwise they will get lost in code that handles button presses *@
        @Html.HiddenFor(m => m.Dalis.ID)

        <fieldset>
            <legend class="text-center">Redaguokite dalį</legend>

            <div class="form-group">
                @Html.LabelFor(m => m.Dalis.Dalis)
                @Html.EditorFor(m => m.Dalis.Dalis)
                @Html.ValidationMessageFor(m => m.Dalis.Dalis, "")
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Dalis.DaliesSritis)
                @Html.TextBoxFor(m => m.Dalis.DaliesSritis)
                @Html.ValidationMessageFor(m => m.Dalis.DaliesSritis, "")
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Dalis.FkSpec)
                @Html.DropDownListFor(m => m.Dalis.FkSpec, Model.Lists.ModelioSpecifikacijos, (string)ViewData["none-chosen"])
                @Html.ValidationMessageFor(m => m.Dalis.FkSpec, "")
            </div>
        </fieldset>

        <fieldset>
            <div class="container-fluid d-flex d-row justify-content-between align-items-center">
                <span></span>
                <legend style="width: unset; margin-bottom: 0px;">Redaguokite padalinio priskyrimą</legend>
                <button name="add"
                        value="1"
                        formnovalidate @*ASP.NET Core magic attribute to prevent client side validation when submit button is clicked*@
                        formaction="@Url.Action()#listEnd"
                        class="btn btn-info">
                    <i class="fa-solid fa-plus"></i> Pridėti
                </button>
            </div>

            <table>
                <thead>
                    <tr>
                        <th>Padalinys</th>
                        <th>Data</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.PasirinktiPadaliniai.Count; i++)
                    {
                        <tr>
                            <td class="form-group">
                                @* add hidden form fields for non-visible properties, otherwise they will get lost in code that handles button presses *@
                                @Html.HiddenFor(m => m.PasirinktiPadaliniai[i].InListId)

                                @Html.DropDownListFor(
                        m => m.PasirinktiPadaliniai[i].Padalinys,
                        Model.Lists.Padaliniai,
                        (string)ViewData["none-chosen"]
                        )
                                @Html.ValidationMessageFor(m => m.PasirinktiPadaliniai[i].Padalinys, "")
                            </td>
                            <td class="form-group">
                                @Html.EditorFor(m => m.PasirinktiPadaliniai[i].Data)
                                @Html.ValidationMessageFor(m => m.PasirinktiPadaliniai[i].Data, "")
                            </td>
                            <td>
                                <button name="remove"
                                        value="@Model.PasirinktiPadaliniai[i].InListId"
                                        formnovalidate @*ASP.NET Core magic attribute to prevent client side validation when submit button is clicked*@
                                        formaction="@Url.Action()#listEnd"
                                        class="btn btn-danger">
                                    <i class="fa-solid fa-trash"></i> Šalinti
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            @* this is used as a marker to automatically scroll down to the end of items list when returning from button presses *@
            <span id="listEnd"></span>
        </fieldset>

        <div class="container-fluid d-flex d-row justify-content-end">
            <button name="save" value="1" class="btn btn-success"><i class="fa-solid fa-floppy-disk"></i> Išsaugoti</button>
        </div>
    }
</div>

@* content footer *@
<div class="main-content-footer">
    <span class="title"></span>
    <span class="actions">
        <a href="@Url.Action("Index")"
           class="btn btn-outline-primary btn-sm">
            <i class="fa-solid fa-angles-left"></i> Atgal į sarašą
        </a>
    </span>
</div>